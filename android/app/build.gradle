plugins {
    id "com.android.application"
    id "kotlin-android"
    id 'com.google.gms.google-services'
    id "dev.flutter.flutter-gradle-plugin"
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.1.1')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.android.gms:play-services-base:18.2.0'
    implementation 'com.google.android.gms:play-services-basement:18.2.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'  // Google Maps SDK
    implementation 'com.google.android.gms:play-services-location:21.0.1'  // Location Services SDK
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity:17.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okio:okio:2.10.0'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.ctpapp.ctp"
    compileSdkVersion 35
    // Align with AGP/Flutter preferred NDK to avoid toolchain mismatch errors
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.ctpapp.ctp"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // ndk {
        //         // Generate a full debug symbols file for native code
        //         debugSymbolLevel 'FULL'
        //     }
    }

    // Ensure native libraries are packaged uncompressed (required for extractNativeLibs=false)
    packaging {
        jniLibs {
            // false => uncompressed .so in APK/AAB, enabling proper 16 KB zip alignment on AGP 8.5.1+
            useLegacyPackaging false
        }
    }

    // Removed product flavors to allow default (no-flavor) builds & runs
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:28.0.0'
    }
}


flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'