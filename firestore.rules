// Firestore rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Public vehicle listings (readable by anyone)
    match /vehicles/{vehicleId} {
      allow read: if true;
      allow write: if request.auth != null && (
        // Owner can write their own vehicle
        request.auth.uid == resource.data.userId ||
        // Admins can write any vehicle
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userRole in ['admin', 'sales representative']
      );
      // Subcollections (e.g., tyres, truckConditions)
      match /{subCollection=**}/{docId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }

    // User profiles (user can read/write their own, admins can read/write all)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userRole in ['admin', 'sales representative']
      );
    }

    // Offers (readable by involved users and admins, writable by involved users)
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        // Dealer, transporter, or admin
        request.auth.uid == resource.data.dealerId ||
        request.auth.uid == resource.data.transporterId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userRole in ['admin', 'sales representative']
      );
    }

    // Notifications (written by app, processed by backend)
    match /direct_push_notifications/{notificationId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false;
    }
  }
}